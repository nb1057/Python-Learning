class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid):
        """
        :type obstacleGrid: List[List[int]]
        :rtype: int
        """
        memo={}
        m = len(obstacleGrid)
        n = len(obstacleGrid[0])

        def letsgo(i, j):
            if i >= m or j >= n or obstacleGrid[i][j] == 1:
                return 0
            elif (i,j) in memo:
                return memo[(i,j)]
            elif i == m-1 and j == n-1:
                return 1
            else:
                memo[(i, j)] = letsgo(i+1, j) + letsgo(i, j+1)
                return memo[(i, j)]
        return letsgo(0, 0)














