#Probably Correct
class Solution:
    def calculateMinimumHP(self, dungeon: list) -> int:
        m = len(dungeon)
        n = len(dungeon[0])
        memo = {}

        def letsgo(x, y):
            if (x, y) in memo:
                pass
            if x == m - 1 and y == n - 1:
                if dungeon[x][y] >= 0: memo[(x, y)] = 1
                else: memo[(x,y)] = 1 - dungeon[x][y]
            elif x == m - 1:
                if dungeon[x][y] < letsgo(x, y+1): memo[(x, y)] = letsgo(x, y+1) - dungeon[x][y]
                else: memo[(x, y)] = 1
            elif y == n - 1:
                if dungeon[x][y] < letsgo(x+1, y): memo[(x, y)] = letsgo(x+1, y) - dungeon[x][y]
                else: memo[(x,y)] = 1
            else:
                if dungeon[x][y] < letsgo(x, y+1): a = letsgo(x, y+1) - dungeon[x][y]
                else: a = 1
                if dungeon[x][y] < letsgo(x+1, y): b = letsgo(x+1, y) - dungeon[x][y]
                else: b = 1
                memo[(x, y)] = min(a, b)
            return memo[(x, y)]

        return letsgo(0, 0)

