class Solution:
    def isMatch(self, s, p):
        """
        :type s: str
        :type p: str
        :rtype: bool
        """

        memo = {}

        def doMatch(si, pi):
            if (si, pi) in memo:
                return memo[(si, pi)]

            if si == len(s) and pi==len(p):
                return True
            elif si==len(s) and pi!=len(p):
                for i in range(pi,len(p)):
                    if p[i] != '*':
                        return False
                return True
            elif si!=len(s) and pi==len(p):
                return False
            else:
                if p[pi] == '*':
                    ans = doMatch(si, pi+1) or doMatch(si+1, pi)
                elif p[pi] == '?':
                    ans = doMatch(si+1, pi+1)
                else:
                    if p[pi] != s[si]:
                        ans = False
                    else:
                        ans = doMatch(si+1, pi+1)
                memo[(si, pi)] = ans
                return ans

        return doMatch(0, 0)


