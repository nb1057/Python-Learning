from collections import defaultdict


class Solution:
    def findOrder(self, numCourses: int, prerequisites: list) -> list:

        def checkit(x) -> list:
            if x in visited: return []
            checked.append(x)
            ret = []
            visited.append(x)
            if dict[x]:
                i = 0
                while i < len(dict[x]):
                    tmp = checkit(dict[x][i])
                    if not tmp: return []
                    else: ret += tmp
            ret += [visited.pop()]
            for item in ret:
                for w in range(numCourses):
                    if item in dict[w]: dict[w].remove(item)
            return ret

        dict = defaultdict(list)
        while prerequisites:
            x = prerequisites.pop()
            dict[x[0]].append(x[1])
        checked = []
        visited = []
        ret_final = []
        i = 0
        while i < numCourses:
            if i not in checked:
                tmp = checkit(i)
                if not tmp: return []
                else: ret_final += tmp
            i += 1
        return ret_final
