class Solution(object):
    def solveSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: void Do not return anything, modify board in-place instead.
        """
        def isValid(r, c, v):
            for i in range(9):
                if i != r and board[i][c] == v:
                    return False
            for j in range(9):
                if j != c and board[r][j] == v:
                    return False
            gridr = (r // 3) * 3
            gridc = (c // 3) * 3
            for i in range(gridr, gridr + 3):
                for j in range(gridc, gridc + 3):
                    if i != r and j != c and board[i][j] == v:
                        return False
            return True

        def solve():
            for r in range(len(board)):
                for c in range(len(board[0])):
                    if board[r][c] == '.':
                        for i in range(1, 10):
                            board[r][c] = str(i)
                            if isValid(r, c, str(i)) and solve():
                                return True
                            board[r][c] = '.'
                        return False
            return True
        
        solve()
        
