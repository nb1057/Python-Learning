# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None


class Solution:
    def partition(self, head, x):
        """
        :type head: ListNode
        :type x: int
        :rtype: ListNode
        """
        if head == None:
            return head
        start = ListNode(-1)
        start.next = head
        # initialize
        i = start
        j = head
        while j.val < x:
            if j.next == None:
                return head
            else:
                i = j
                j = j.next
        k = j
        while k.next != None:
            if k.next.val >= x:
                k = k.next
            else:
                i.next = k.next
                k.next = k.next.next
                i.next.next = j
                i = i.next
        return start.next
                


