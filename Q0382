import random
import math


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:

    def __init__(self, head: ListNode):
        """
        @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node.
        """
        self.start = head
        

    def getRandom(self) -> int:
        """
        Returns a random node's value.
        """
        cur = self.start
        cnt = 1
        while cur.next:
            cnt += 1
            cur = cur.next
        cnt = math.floor(cnt*random.random())
        cur = self.start
        while cnt:
            cur = cur.next
            cnt -= 1
        return cur.val
        

# Your Solution object will be instantiated and called as such:
# obj = Solution(head)
# param_1 = obj.getRandom()
