class Solution:
    def isInterleave(self, s1, s2, s3):
        """
        :type s1: str
        :type s2: str
        :type s3: str
        :rtype: bool
        """
        memo = {}

        def letsgo(i, j):
            if (i, j) in memo:
                return memo[(i, j)]
            elif i == len(s1) and j == len(s2):
                memo[(i, j)] = True
            elif i == len(s1):
                if s2[j] == s3[i+j]:
                    memo[(i, j)] = letsgo(i, j+1)
                else:
                    memo[(i, j)] = False
            elif j == len(s2):
                if s1[i] == s3[i+j]:
                    memo[(i, j)] = letsgo(i+1, j)
                else:
                    memo[(i, j)] = False
            elif s1[i] == s3[i+j] and s2[j] == s3[i+j]:
                memo[(i, j)] = letsgo(i+1, j) or letsgo(i, j+1)
            elif s1[i] == s3[i+j]:
                memo[(i, j)] = letsgo(i+1, j)
            elif s2[j] == s3[i+j]:
                memo[(i, j)] = letsgo(i, j+1)
            else:
                memo[(i, j)] = False

            return memo[(i, j)]

        if len(s1) + len(s2) != len(s3):
            return False
        else:
            return letsgo(0, 0)


