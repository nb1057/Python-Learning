# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None


class Solution:
    def buildTree(self, preorder: 'List[int]', inorder: 'List[int]') -> 'TreeNode':
        if not preorder:
            return None
        else:
            newroot = TreeNode(preorder[0])
            index = inorder.index(preorder[0])
            next_left_inorder = inorder[:index]
            next_right_inorder = inorder[index+1:]
            next_left_preorder = preorder[1:len(next_left_inorder)+1]
            next_right_preorder = preorder[len(next_left_inorder)+1:]
            newroot.left = self.buildTree(next_left_preorder, next_left_inorder)
            newroot.right = self.buildTree(next_right_preorder, next_right_inorder)
            return newroot
