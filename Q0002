# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """

        x=l1.val
        y=l2.val
        carry=(x+y)//10
        summ=(x+y)%10
        ret=ListNode(summ)
        a=ret

        while (l1.next!=None) or (l2.next!=None):
            if (l1.next==None):
                x=0
            else:
                l1=l1.next
                x=l1.val
            if(l2.next==None):
                y=0
            else:
                l2=l2.next
                y=l2.val
            summ=(x+y+carry)%10
            carry=(x+y+carry)//10
            ret.next=ListNode(summ)
            ret=ret.next
        
        if carry:
            ret.next=ListNode(carry)
            
        return a
            
            
            
            
