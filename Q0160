# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type headA, headB: ListNode
        :rtype: ListNode
        """
        lista = []
        listb = []
        curA = headA
        curB = headB
        while curA is not None:
            lista.append(curA)
            curA = curA.next
        while curB is not None:
            listb.append(curB)
            curB = curB.next
        ret = None
        while len(lista) > 0 and len(listb) > 0:
            if lista[-1] == listb[-1]:
                ret = lista[-1]
                lista.pop()
                listb.pop()
            else:
                return ret
        return ret
