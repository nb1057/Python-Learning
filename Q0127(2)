from collections import defaultdict


class Solution:
    def ladderLength(self, beginWord, endWord, wordList) -> 'int':
        if endWord not in wordList:
            return 0
        length = len(beginWord)
        d = defaultdict(list)
        for item in wordList:
            for i in range(length):
                d[item[:i] + '*' + item[i+1:]].append(item)
        visited_list = [beginWord]
        queue = [(beginWord, 1)]
        while queue:
            word, level = queue.pop(0)
            for i in range(length):
                tmp_word = word[:i] + '*' + word[i+1:]
                for item in d[tmp_word]:
                    if item == endWord:
                        return level + 1
                    if item not in visited_list:
                        visited_list.append(item)
                        queue.append((item, level+1))
        return 0


