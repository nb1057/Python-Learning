class Solution:
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        def read(matrix):
            m=len(matrix)
            n=len(matrix[0])
            ret=[]
            if m<=2 or n<=2:
                if m==2:
                    for j in range(n):
                        ret.append(matrix[0][j])
                    for j in range(n-1,-1,-1):
                        ret.append(matrix[1][j])
                elif n==2:
                    ret.append(matrix[0][0])
                    for i in range(m):
                        ret.append(matrix[i][1])
                    for i in range(m-1,0,-1):
                        ret.append(matrix[i][0])
                elif m==1:
                    for j in range(n):
                        ret.append(matrix[0][j])
                else:
                    for i in range(m):
                        ret.append(matrix[i][0])
                return ret
            else:
                matrix2=[]
                for i in range(1,m-1):
                    matrix2.append([])
                    for j in range(1,n-1):
                        matrix2[i-1].append(matrix[i][j])
                for j in range(n-1):
                    ret.append(matrix[0][j])
                for i in range(m-1):
                    ret.append(matrix[i][n-1])
                for j in range(n-1,0,-1):
                    ret.append(matrix[m-1][j])
                for i in range(m-1,0,-1):
                    ret.append(matrix[i][0])
                return ret+read(matrix2)
        if not matrix:
            return []
        return read(matrix)
